########################################################################
# Pointwise - Proprietary software product of Pointwise, Inc.
#             Copyright (c) 1995-2012 Pointwise, Inc.
#             All rights reserved.
#
# module.mk for src\plugins\CaeStrXML plugin
########################################################################

########################################################################
########################################################################
#
#                   DO NOT EDIT THIS FILE
#
# To simplify SDK upgrades, the standard module.mk file should NOT be edited.
#
# If you want to modify a plugin's build process, you should rename
# modulelocal-sample.mk to modulelocal.mk and edit its settings.
#
# See the comments in modulelocal-sample.mk for more information.
#
#                   DO NOT EDIT THIS FILE
#
########################################################################
########################################################################

CaeStrXML_LOC := $(PLUGINS_LOC)/CaeStrXML
CaeStrXML_LIB := CaeStrXML$(DBG_SUFFIX)
CaeStrXML_CXX_LOC := $(CaeStrXML_LOC)
CaeStrXML_OBJ_LOC := $(PLUGINS_OBJ_LOC)/CaeStrXML

CaeStrXML_FULLNAME := lib$(CaeStrXML_LIB).$(SHLIB_SUFFIX)
CaeStrXML_FULLLIB := $(PLUGINS_DIST_DIR)/$(CaeStrXML_FULLNAME)

CaeStrXML_DEPS = \
	$(NULL)

MODCXXFILES := \
	runtimeWrite.c \
	$(NULL)

# IMPORTANT:
# Must recompile the shared/XXX/.c files for each plugin. These .c files
# include the plugin specific settings defined in the ./CaeStrXML/*.h
# files.
CaeStrXML_SRC := \
	$(PLUGINS_RT_PWPSRC) \
	$(PLUGINS_RT_PWGMSRC) \
	$(PLUGINS_RT_CAEPSRC) \
	$(patsubst %,$(CaeStrXML_CXX_LOC)/%,$(MODCXXFILES))

CaeStrXML_SRC_C := $(filter %.c,$(MODCXXFILES))
CaeStrXML_SRC_CXX := $(filter %.cxx,$(MODCXXFILES))

# place the .o files generated from shared sources in the plugin's
# OBJ folder.
CaeStrXML_OBJ := \
	$(patsubst %.c,$(CaeStrXML_OBJ_LOC)/%.o,$(PLUGINS_RT_PWPFILES)) \
	$(patsubst %.c,$(CaeStrXML_OBJ_LOC)/%.o,$(PLUGINS_RT_PWGMFILES)) \
	$(patsubst %.c,$(CaeStrXML_OBJ_LOC)/%.o,$(PLUGINS_RT_CAEPFILES)) \
    $(patsubst %.c,$(CaeStrXML_OBJ_LOC)/%.o,$(CaeStrXML_SRC_C)) \
    $(patsubst %.cxx,$(CaeStrXML_OBJ_LOC)/%.o,$(CaeStrXML_SRC_CXX)) \
	$(NULL)

# To allow over-rides, search FIRST for headers in the local module's folder.
# For example, a site.h file in the local module's folder will preempt the
# file .../src/plugins/site.h
CaeStrXML_INCL = \
	-I$(CaeStrXML_LOC) \
	$(PLUGINS_RT_INCL) \
	$(NULL)

CaeStrXML_LIBS = \
	$(NULL)

CaeStrXML_MAINT_TARGETS := \
    CaeStrXML_info \
    CaeStrXML_install \
    CaeStrXML_installnow \
    CaeStrXML_uninstall


########################################################################
# Get (OPTIONAL) locally defined make targets. If a plugin developer wants
# to extend a plugin's make scheme, they should create a modulelocal.mk file
# in the plugin's base folder. To provide for future SDK upgrades, the standard
# module.mk file should NOT be directly edited.
#
ifneq ($(wildcard $(CaeStrXML_LOC)/modulelocal.mk),)
    CaeStrXML_DEPS += $(CaeStrXML_LOC)/modulelocal.mk
    include $(CaeStrXML_LOC)/modulelocal.mk
endif


# merge in plugin private settings

CaeStrXML_OBJ += \
    $(patsubst %.c,$(CaeStrXML_OBJ_LOC)/%.o,$(filter %.c,$(CaeStrXML_CXXFILES_PRIVATE))) \
    $(patsubst %.cxx,$(CaeStrXML_OBJ_LOC)/%.o,$(filter %.cxx,$(CaeStrXML_CXXFILES_PRIVATE))) \
	$(NULL)

CaeStrXML_SRC += \
	$(patsubst %,$(CaeStrXML_CXX_LOC)/%,$(CaeStrXML_CXXFILES_PRIVATE)) \
	$(NULL)

CaeStrXML_INCL += $(CaeStrXML_INCL_PRIVATE)
CaeStrXML_LIBS += $(CaeStrXML_LIBS_PRIVATE)
CaeStrXML_CXXFLAGS += $(CaeStrXML_CXXFLAGS_PRIVATE)
CaeStrXML_LDFLAGS += $(CaeStrXML_LDFLAGS_PRIVATE)
CaeStrXML_MAINT_TARGETS += $(CaeStrXML_MAINT_TARGETS_PRIVATE)

PLUGIN_MAINT_TARGETS += $(CaeStrXML_MAINT_TARGETS)
PLUGIN_OBJ += $(CaeStrXML_OBJ)

# add to plugin maint targets to the global .PHONY target
.PHONY: \
	$(CaeStrXML_MAINT_TARGETS) \
	$(NULL)


########################################################################
# Set the final build macros
CaeStrXML_CXXFLAGS := $(CXXFLAGS) $(PLUGINS_STDDEFS) $(CaeStrXML_INCL) -DPWGM_HIDE_UNSTRUCTURED_API

ifeq ($(machine),macosx)
CaeStrXML_LDFLAGS = -install_name "$(REL_BIN_TO_PW_LIB_DIR)/$(CaeStrXML_FULLNAME)"
else
CaeStrXML_LDFLAGS =
endif


########################################################################
# list of plugin's build targets
#
CaeStrXML: $(CaeStrXML_FULLLIB)

$(CaeStrXML_FULLLIB): $(CaeStrXML_OBJ) $(CaeStrXML_DEPS)
	@echo "***"
	@echo "*** $@"
	@echo "***"
	@mkdir -p $(PLUGINS_DIST_DIR)
	$(SHLIB_LD) $(ARCH_FLAGS) $(CaeStrXML_LDFLAGS) -o $(CaeStrXML_FULLLIB) $(CaeStrXML_OBJ) $(CaeStrXML_LIBS) $(SYS_LIBS)

CaeStrXML_info:
	@echo ""
	@echo "--------------------------------------------------------------"
ifeq ($(machine),macosx)
	otool -L -arch all $(CaeStrXML_FULLLIB)
	@echo ""
endif
	file $(CaeStrXML_FULLLIB)
	@echo "--------------------------------------------------------------"
	@echo ""


########################################################################
# list of plugin's intermediate targets
#
$(CaeStrXML_OBJ_LOC):
	mkdir -p $(CaeStrXML_OBJ_LOC)

#.......................................................................
# build .d files for the plugin and each of the shared runtime sources
# the .d files will be placed in the plugins OBJ folder CaeStrXML_OBJ_LOC
$(CaeStrXML_OBJ_LOC)/%.d: $(CaeStrXML_CXX_LOC)/%.c
	@echo "Updating dependencies $(CaeStrXML_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	@./depend.sh $(CaeStrXML_OBJ_LOC) $(CaeStrXML_CXXFLAGS) $< > $@

$(CaeStrXML_OBJ_LOC)/%.d: $(PLUGINS_RT_PWPLOC)/%.c
	@echo "Updating dependencies $(CaeStrXML_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	@./depend.sh $(CaeStrXML_OBJ_LOC) $(CaeStrXML_CXXFLAGS) $< > $@

$(CaeStrXML_OBJ_LOC)/%.d: $(PLUGINS_RT_PWGMLOC)/%.c
	@echo "Updating dependencies $(CaeStrXML_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	@./depend.sh $(CaeStrXML_OBJ_LOC) $(CaeStrXML_CXXFLAGS) $< > $@

$(CaeStrXML_OBJ_LOC)/%.d: $(PLUGINS_RT_CAEPLOC)/%.c
	@echo "Updating dependencies $(CaeStrXML_OBJ_LOC)/$*.d"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	@./depend.sh $(CaeStrXML_OBJ_LOC) $(CaeStrXML_CXXFLAGS) $< > $@

#.......................................................................
# build .o files for the plugin and each of the shared runtime sources.
# the .o files will be placed in the plugins OBJ folder CaeStrXML_OBJ_LOC
$(CaeStrXML_OBJ_LOC)/%.o: $(CaeStrXML_CXX_LOC)/%.c
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	$(CXX) $(CaeStrXML_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeStrXML_OBJ_LOC)/%.o: $(PLUGINS_RT_PWPLOC)/%.c
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	$(CXX) $(CaeStrXML_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeStrXML_OBJ_LOC)/%.o: $(PLUGINS_RT_PWGMLOC)/%.c
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	$(CXX) $(CaeStrXML_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<

$(CaeStrXML_OBJ_LOC)/%.o: $(PLUGINS_RT_CAEPLOC)/%.c
	@echo "***"
	@echo "*** $*"
	@echo "***"
	@mkdir -p $(CaeStrXML_OBJ_LOC)
	$(CXX) $(CaeStrXML_CXXFLAGS) $(ARCH_FLAGS) -o $@ -c $<


########################################################################
# list of plugin's clean targets
#
CaeStrXML_cleandep:
	-$(RMR) $(CaeStrXML_OBJ_LOC)/*.d

CaeStrXML_clean:
	-$(RMR) $(CaeStrXML_OBJ_LOC)/*.{d,o}

CaeStrXML_distclean: CaeStrXML_clean
	-$(RMF) $(CaeStrXML_FULLLIB) > /dev/null 2>&1

########################################################################
# list of plugin's clean targets
#
CaeStrXML_install: install_validate CaeStrXML_installnow
	@echo "CaeStrXML Installed to '$(PLUGIN_INSTALL_FULLPATH)'"

CaeStrXML_installnow:
	-@$(CP) $(CaeStrXML_FULLLIB) "$(PLUGIN_INSTALL_FULLPATH)/libCaeStrXML.$(SHLIB_SUFFIX)"

CaeStrXML_uninstall:
	@echo "CaeStrXML Uninstalled from '$(PLUGIN_INSTALL_FULLPATH)'"
	-@$(RMF) "$(PLUGIN_INSTALL_FULLPATH)/libCaeStrXML.$(SHLIB_SUFFIX)"
